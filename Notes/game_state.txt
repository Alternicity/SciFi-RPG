game_state
I think
We should not be relying on game_state by default, but instead things like region and location objects and updating game_state for use as a back up.
game_state was created to solve a problem with fundamental world variables like all_regions and (I think) using it makes the program less object oriented.
I could be wrong, what do you think?
game_state represents a parallel system, so should be used sparingly, but be kept updated.
So, if this is the better approach we could be checking 
for each region, 
for each workplace,
do stuff
update the location, and region if necessary,
update also any large variables in game_state.