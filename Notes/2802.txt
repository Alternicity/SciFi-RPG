Running the program I reach hereprint(f"{character.name} enters {location.name}.")
    
    # Check if it's a vendor
    if isinstance(location, Shop):
        from display import show_shop_inventory
        show_shop_inventory(location)
    elif isinstance(location, CorporateStore):
        print(f"{location.name} is a corporate store. Items are issued based on status.")
    else:
        print(f"{location.name} is not a vendor.")

        return
Output
Karen enters Shop in Downtown.
Shop in Downtown has no items available.

The program then prints the gameplay menu.

1. I would like to add an item to the shops inventory.
 2. Display any employees there, probably from a new function in the shop class that lists employees and uses another new function in display. The new one in display can probably be generalised to work with whichever location
3. Have a Talk to character action prototyped.
4 Have a leave location option in the new menu, which takes the character back to region, no location rather than the gameplay menu automatically displaying again.

5 Is it possible to have dynamic menu options?
6 For example there is an action flirt() and charm() but I dont want those options to show up every time a social interaction happens, unless the character has them as preferred actions. Same with steal()

This leads towards individual characters needing a list or dictionary of preferred actions, and reminds me I have a behaviours.py with a class Behaviour which could be incorporated or deleted.
Actions and behaviours overlap conceptually.
It might be too much overlap.
It could be that actions are specific things a character does, behaviours are pre-dispositions, what a they are likely to do.
The use of the term behaviour might also conflict with any future Behaviour Tree development.